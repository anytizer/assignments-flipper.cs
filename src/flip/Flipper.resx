<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAQAAAAAAAAAAAAAAAEAAAAB
        AAAAAAAA+FsAAPhdAQD4XgQA+GAHAPhiCgD4ZQ4A+GcRAPdqFwD4aBMA+GkVAPdsGwD5axgA+WwZAPhu
        HQD5cB8A928gAPhvIAD3cSIA+HEhAPhzJQD4dCYA93ctAPh2KQD5dywA+HgtAPd7MwD4ejAA+HwyAPh9
        NQD4fzgA+IA6APiCPAD4hD4A+YVBAPmGRAD5iEYA+YpKAPqMSwD5i0wA+YxNAPmOUAD5kFIA+ZJVAPqT
        WAD5lFkA+ZZcAPqYXwD5mWEA+ZtkAPmcZQD5nmgA+qBqAPqhbQD3p3cA+qJwAPqkcgD6pnUA+qh3APqp
        eQD6qnwA+qx9APeqgQD7rYAA+rCFAPqziAD7tIoA+raNAPy2jgD7uJEA/LiRAPu7lQD8upQA/LyXAPu+
        mgD8vZgA/L+cAPzAnQD8wqEA/MamAPzJqwD7y64A/MqtAPzMsQD8z7UA/dK5AP3UvQD92MMA/dzJAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        f////n////7/////////////
</value>
  </data>
</root>